stages:
  - build-docker-image
  - deploy

#include:
#  - project: pd/sra/srab/cd
#    ref: master
#    file: push_docker_image_to_gcr.yml

push_docker_image_to_gcr:
  stage: deploy
  image: ${CRANE_IMAGE}
  needs: ["build-docker-image"]
  script:
    - export CLOUDSDK_CONFIG=$CI_PROJECT_DIR
    - export GCP_ARTIFACT_REGISTRY_URL=$(echo ${GCP_ARTIFACT_REGISTRY} | cut -d"/" -f1)

    # login to GitLab Registry
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    # install gcloud
    - curl -s -L -o google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - mkdir -p /usr/local/gcloud && tar -C /usr/local/gcloud -xvf google-cloud-sdk.tar.gz
    - /usr/local/gcloud/google-cloud-sdk/install.sh --quiet
    - source /usr/local/gcloud/google-cloud-sdk/path.bash.inc
    #- export $PATH:/usr/local/gcloud/google-cloud-sdk/bin

    # login to Google Artifact Registry
    - gcloud auth activate-service-account --key-file=${GCP_IMAGE_PUSH_CREDENTIALS}
    - gcloud auth print-access-token | crane auth login -u oauth2accesstoken --password-stdin ${GCP_ARTIFACT_REGISTRY_URL}

    # copy image
    - crane copy "${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}-${IMAGE_NAME}:${CI_COMMIT_SHA}" "${GCP_ARTIFACT_REGISTRY}/${CI_COMMIT_REF_SLUG}-${IMAGE_NAME}:${CI_COMMIT_SHA}"
    - crane tag "${GCP_ARTIFACT_REGISTRY}/${CI_COMMIT_REF_SLUG}-${IMAGE_NAME}:${CI_COMMIT_SHA}" "latest"

build-docker-image:
  stage: build-docker-image
  image: ${KANIKO_IMAGE_URL}
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --build-arg CI_REGISTRY="${CI_REGISTRY}" --context "./" --dockerfile "Dockerfile" --destination "${CI_REGISTRY_IMAGE}/${CI_COMMIT_BRANCH}-${IMAGE_NAME}:${CI_COMMIT_SHA}" --destination "${CI_REGISTRY_IMAGE}/${CI_COMMIT_BRANCH}-${IMAGE_NAME}:latest" --single-snapshot --push-retry 2
